// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package chat

import (
	"github.com/gin-gonic/gin"
	"github.com/pdcgo/common_conf/common_concept"
	"github.com/pdcgo/tokopedia_lib/app/chat/api"
	"github.com/pdcgo/tokopedia_lib/app/chat/config"
	"github.com/pdcgo/tokopedia_lib/app/chat/group"
	"github.com/pdcgo/tokopedia_lib/app/chat/helper"
	"github.com/pdcgo/tokopedia_lib/app/chat/repo"
	"github.com/pdcgo/tokopedia_lib/app/chat/service"
	"github.com/pdcgo/tokopedia_lib/lib/api_public"
)

// Injectors from wire.go:

func InitApplication(cfg *config.AppConfig) (*Application, error) {
	engine := gin.Default()
	apiSdk := CreateChatSdk(engine)
	coreEvent := common_concept.NewCoreEvent()
	server := CreateSocketIO(coreEvent)
	mainApi := api.NewMainApi()
	db := CreateSqliteDatabase(cfg)
	accountRepo := repo.NewAccountRepo(db)
	driverGroup := group.NewDriverGroup()
	accountService := service.NewAccountService(accountRepo, driverGroup)
	initConfig := config.NewInitConfig(cfg)
	accountApi := api.NewAccountApi(server, accountService, driverGroup, initConfig, accountRepo)
	groupRepo := repo.NewGroupRepo(db)
	socketGroup := group.NewSocketGroup(coreEvent, server)
	chatGroup := group.NewChatGroup(server, initConfig, accountRepo, driverGroup, socketGroup)
	groupApi := api.NewGroupApi(db, initConfig, accountRepo, groupRepo, chatGroup)
	baseDriverApi := api.NewBaseDriverApi(initConfig, accountRepo, driverGroup)
	soundPlayer := helper.NewSoundPlayer(cfg)
	chatService := service.NewChatService(coreEvent, socketGroup, soundPlayer)
	notificationService := service.NewNotificationService(coreEvent, initConfig, server, accountRepo, driverGroup, accountService)
	chatApi := api.NewChatApi(baseDriverApi, soundPlayer, chatService, notificationService)
	tokopediaApiPublic, err := api_public.NewTokopediaApiPublic()
	if err != nil {
		return nil, err
	}
	productApi := api.NewProductApi(tokopediaApiPublic)
	stickerApi := api.NewStickerApi(baseDriverApi)
	application := NewApplication(cfg, apiSdk, coreEvent, server, mainApi, accountApi, groupApi, chatApi, productApi, stickerApi)
	return application, nil
}
